Game2 refactoring
v pull up menuitemconfig
v pull up spiritconfig
- break up basescreen
  v sounds
    v put sound effect code in it's own file
    v call screen.sounds.foo() - remove screen sound methods
      yea yea Law of Demeter... Adding a param to every Spirit is a PITA. Not gonna do it.
  - splashes
    - own file
    - call screen.splashes.foo(), rm screen methods
  - stamps
  - wall code
  - controls setup
  - gl model setup
  - dom event handling (listen, unlisten, distributor setup)
  - phy stuff
    - groups setup
    - collision handling
    - scan util
  - deserislization
- pull up basespirit... to spirit?

Test 39: Orientation & off-center force
v test nest based on previous editor tests
- absorb lessons and libs from game2 code
- phy
  - bodies
    - moi
    - "turnable" boolean? - default undefined means no?
    - angStart
    - angTime
    - angVel
    - getAngleAtTime()
    - setAngAtTime()
    - setAngVelAtTime()
- editor
  - grab objects at a point, and apply force to that point when dragging
    - point defined by dist & direction from center of mass.
  - give cursor a direction based on movement
  - add objects with initial orientation based on cursor direction
- s27n


chain constraints
Simple distance between two body positions - no offset from center, because rotation would make that harder.
- phy map from bodyId to chain constraint

- Editor cursor can rotate bodies, either because of where they were grabbed (tricky) or the direction they are moved.
- A non-grabbing cursor has orientation, and new objects will be added with that orientation.
- Save/load orientation

Test XX: Undo and Redo
- retain last N JSON serializations in RAM or wherevs.
- Create new ones using one-token-bucket throttle right before mutations, w 1/sec(realtime) restore rate.
- Always save the just-after mutation camera and cursor pos, to bring the area into focus before undoing.
  Keep that as a separate kind of undo record, since it's so tiny and easy to restore.
- Button for creating an undo record just because time went by. Snapshot?

Zoomable Editor
- two-touch pinch/unpinch
- mouse onscroll, like Vorp
- keys, maybe "[" and "]" or "," and "."
- Touching the zoom indicator buttons zooms to that level Maybe four: close, medium, wide, far.

Lifting?
- If cursor distance is too great for too long (low-pass average dist?), "lift" the object
- Lifted objects are treated as though they are uniform density, normal MOI, with no physics or collisions.
- Can lifted objects be sensed with rayscans? No, they're transferred to the "none" group.
- Only one object can be lifted at a time (worry about multi-user in the distant future).
- Lifting ends when you release the object.
* When time is frozen (upcoming feature), all object-movement is by lifting, because there is no time for physics.
* When adding objects, they are lifted as they leave the menu.
