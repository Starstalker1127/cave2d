cave2d.com/<game path>/edit is the main editing UI, with adventures, levels, level editor, etc.
* Like Vorp, this is a single-page app with a hash-fragment query string.
  That means that the level editor's unzoomable meta tags need to be added/removed dynamically.
v Page baseclass
  v enterDoc
  v exitDoc
v classy AdventureListPage instead of globals

- Adventure List: If no adventure is found, clear the query and show the adventure list.
  v look in storage for paths like [<game>, "adventures", <adventure name>, ...]
  v show 'em in a list
  v "create" button for the whole list
  - for each row,
    v copy
    v rename
    v delete
    - hyperlink to enter adventure's levelList. URL: game2/edit/#adventure=<name>
- app class
  - hash fragment query parser
  - listen to hash fragment URL changes
  - ref to page now showing, to call exitDoc on it, then enter the new one
- Level List: If adventure is found but no level, show that adventure's level list.
  - link back to adventure list
- Level editor: If adventure and level are found, show that level's editor
  - link back to level list

/<game path>/export exports the editor data to text which can be copy/pasted into /game2/ file
/<game path> is for playing the exported game.

Orientation
- Bodies have orientation, moment of inertia, and angular velocity.
- create repeller turrets
- Cursor force can rotate bodies? Or cursor motion changes body orientation anyhow.
- editor

Attribute editing?
- Spirits can expose a type+key: value form
- Mode button opens form editor

Test XX: Possession?
- "enter" button in editor
- standard interface for playable spirits to implement
  - trackballs and sticks
  - onscreen triggers
  - callbacks
  - maybe control passage of time
- PlayScreen "play" mode separate from "edit" mode
- "exit" trigger to return to edit mode, at current location
- two playable spirits at least
  - Gnome Generator - generate
  - Gnome - move, lunge
  - Ninja - move, fire

Test XX: Undo and Redo
- retain last N JSON serializations in RAM or wherevs.
- Create new ones using one-token-bucket throttle right before mutations, w 1/sec(realtime) restore rate.
- Always save the just-after mutation camera and cursor pos, to bring the area into focus before undoing.
  Keep that as a separate kind of undo record, since it's so tiny and easy to restore.
- Button for creating an undo record just because time went by. Snapshot?

Very Optional: Always do something for editor triggers
- "Grab"
  - Always grabs best candidate up to full-screen distance.
    - Show rapidly-expanding scan-bubble?
  - If there's nothing, say that.
  - Show connection to grabbed thing
  - Strength is proportional to dist up to some limit, then is inversely proportinal? Or levels off?
- Terrain editors
  - Nice sparks when they change something.
  - Fizzle-sparks when they don't something.
  - If you hold still, you get an expanding effect bubble (up to some limit) to make big chambers n stuff easy?

YOU WIIINNN!
NOW WRITE A GAME YOU NUT!

Game1 Splashes II
- muzzle flash
  - player fire
  - enemy fire
- bounce
  - need point of contact!
- bullet destruct
- boulder bounce?

Zoomable?
- two-touch pinch/unpinch
- mouse onscroll, like Vorp
- keys, maybe "[" and "]" or "," and "."
- Touching the zoom indicator buttons zooms to that level Maybe four: close, medium, wide, far.

Lifting?
- If cursor distance is too great for too long (low-pass average dist?), "lift" the object
- Lifted objects are treated as though they are uniform density, normal MOI, with no physics or collisions.
- Can lifted objects be sensed with rayscans? No, they're transferred to the "none" group.
- Only one object can be lifted at a time (worry about multi-user in the distant future).
- Lifting ends when you release the object.
* When time is frozen (upcoming feature), all object-movement is by lifting, because there is no time for physics.
* When adding objects, they are lifted as they leave the menu.
