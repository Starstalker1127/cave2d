// Special rendering type:
// 0: none
// 1: circle cut-off
uniform lowp int uType;

uniform lowp int uCircleCount; // 1 to 8
uniform lowp float uCircleRad[8];
uniform lowp vec4 uCirclePos[8];

varying lowp vec4 vColor;
varying lowp vec4 vPos;

void main(void) {
  if (uType == 0) {
    gl_FragColor = vColor;
  } else if (uType == 1) {
    lowp float minDist = 1.0;
    for (int i = 0; i < 8; i++) {
      if (i < uCircleCount) {
        minDist = min(minDist, distance(vPos, uCirclePos[i]) / uCircleRad[i]);
      }
    }
    if (minDist < 0.85) {
      gl_FragColor = vColor;
    } else if (minDist < 1.0) {
      gl_FragColor = vColor * 0.6;
    } else {
      discard;
    }
  }
}
