uniform mat4 uViewMatrix;
uniform mat4 uModelMatrix;
uniform vec4 uModelColor;

attribute vec4 aVertexPosition;
attribute vec4 aVertexColor;

varying lowp vec4 vColor;

void main(void) {
  vec2 warp = vec2(0, 0);
  gl_Position = aVertexPosition * uModelMatrix;
  vec4 modelCenter = vec4(0.0, 0.0, 0.0, 1.0) * uModelMatrix;
  float vertDist = distance(gl_Position.xy, warp);
  float warpRad = 4.0;
  float strength = 0.7;
  if (vertDist < warpRad && vertDist > 0.0) {
    vec2 distort = (gl_Position.xy - warp)/vertDist * (warpRad - vertDist) * strength;
    gl_Position.xy += distort;
  }
  vColor = aVertexColor * uModelColor;
  gl_Position *= uViewMatrix;
}
