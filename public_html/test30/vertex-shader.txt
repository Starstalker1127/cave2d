uniform mat4 uViewMatrix;
uniform mat4 uModelMatrix;
uniform vec4 uModelColor;
uniform mat4 uModelMatrix2;

attribute vec4 aVertexPosition;
attribute vec4 aVertexColor;
attribute float aVertexGroup;

varying lowp vec4 vColor;

void main(void) {
  if (aVertexGroup == 0.0) {
    gl_Position = aVertexPosition * uModelMatrix * uViewMatrix;;
  } else {
    gl_Position = aVertexPosition * uModelMatrix2 * uViewMatrix;;
  }
  vColor = aVertexColor * uModelColor;
  //vColor = vColor * (-gl_Position.z * 0.5 + 0.7);
  //vColor = vColor * (-gl_Position.z * 0.5 + 0.5);
  //vColor = vColor * (-gl_Position.z * 0.25 + 0.75);
  vColor = vColor * (-gl_Position.z * 0.9 + 0.5);
}
